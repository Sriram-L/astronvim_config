{
  "CP Template": {
  "prefix": "ctemp",
  "body": [
    "#include <bits/stdc++.h>",
    "using namespace std;",
    "#pragma GCC optimize(\"Ofast\")",
    "#pragma GCC optimize(\"unroll-loops\")",
    "#define gc getchar_unlocked",
    "#define ar array",
    "#define ll long long",
    "#define ld long double",
    "#define sza(x) ((int)x.size())",
    "#define all(a) (a).begin(), (a).end()",
    "",
    "#define PI 3.1415926535897932384626433832795l ",
    "const int MAX_N = 1e5 + 5;",
    "const ll MOD = 1e9 + 7;",
    "const ll INF = 1e9;",
    "const ld EPS = 1e-9;",
    "",
    "/**************Debugger*************/",
    "void _print(int a){ cerr << a;}",
    "void _print(long long a){ cerr << a;}",
    "void _print(bool a){ cerr << a;}",
    "void _print(char a){ cerr << a;}",
    "template <class T>void _print(vector<T> v1){cerr << \"[\"; for (T i : v1) { _print(i); cerr << \" \";}cerr<<\"]\"<<endl;}",
    "template <class T>void _print(set<T> s1){cerr << \"[\"; for (T i : s1) { _print(i); cerr << \" \";}cerr<<\"]\"<<endl;}",
    "#ifndef ONLINE_JUDGE",
    "#define debug(x)       \\",
    "    cerr << #x << \"=\"; \\",
    "    _print(x);         \\",
    "    cout << endl;",
    "#else",
    "#define debug(x)",
    "#endif",
    "/************************************/",
    "typedef pair<int, int> pii;",
    "typedef pair<ll, ll> pl;",
    "typedef vector<int> vi;",
    "typedef vector<ll> vl;",
    "typedef vector<pii> vpii;",
    "typedef vector<pl> vpl;",
    "typedef vector<vi> vvi;",
    "typedef vector<vl> vvl;",
    "// -------------------------<RNG>------------------------- ",
    "// RANDOM NUMBER GENERATOR",
    "mt19937 RNG(chrono::steady_clock::now().time_since_epoch().count());  ",
    "#define SHUF(v) shuffle(all(v), RNG);",
    "",
    "// ----------------------</BITWISE>-------------------------- ",
    "/* a=target variable, b=bit number to act upon 0-n */",
    "#define BIT_SET(a,b) ((a) |= (1ULL<<(b)))",
    "#define BIT_CLEAR(a,b) ((a) &= ~(1ULL<<(b)))",
    "#define BIT_FLIP(a,b) ((a) ^= (1ULL<<(b)))",
    "",
    "// '!!' to make sure this returns 0 or 1",
    "#define BIT_CHECK(a,b) (!!((a) & (1ULL<<(b))))",
    "",
    "#define BITMASK_SET(x, mask) ((x) |= (mask))",
    "#define BITMASK_CLEAR(x, mask) ((x) &= (~(mask)))",
    "#define BITMASK_FLIP(x, mask) ((x) ^= (mask))",
    "#define BITMASK_CHECK_ALL(x, mask) (!(~(x) & (mask)))",
    "#define BITMASK_CHECK_ANY(x, mask) ((x) & (mask))",
    "// ----------------------</BITWISE END>--------------------------",
    "",
    "",
    "",
    "/* ========== YOUR CODE HERE ========= */",
    "",
    "void solution()",
    "{",
    "\t$0",
    "}",
    "",
    "/* ========== YOUR CODE HERE ========= */",
    "",
    "int main()",
    "{",
    "    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
    "    srand(chrono::high_resolution_clock::now().time_since_epoch().count());",
    "",
    "    int t = 1;",
    "    cin >> t;",
    "    while (t--)",
    "    {",
    "        solution();",
    "    }",
    "    return 0;",
    "}",
    ""
  ],
  "description": "CP Template"
}
  
}
